{"version":3,"file":"scramjet.worker.js","sources":["webpack://@mercuryworkshop/scramjet/./src/scramjet.ts","webpack://@mercuryworkshop/scramjet/./src/shared.ts","webpack://@mercuryworkshop/scramjet/./src/shared/rewriters/js.ts","webpack://@mercuryworkshop/scramjet/./src/worker/error.ts","webpack://@mercuryworkshop/scramjet/./src/worker/fakesw.ts","webpack://@mercuryworkshop/scramjet/./src/worker/fetch.ts","webpack://@mercuryworkshop/scramjet/./rewriter/wasm/out/snippets/wasm-4b0f351a8e6eeb46/inline0.js","webpack://@mercuryworkshop/scramjet/./rewriter/wasm/out/wasm.js","webpack://@mercuryworkshop/scramjet/./src/worker/index.ts"],"sourcesContent":["import { ScramjetFlags } from \"./types\";\n\nif (!(\"$scramjet\" in self)) {\n\t// @ts-expect-error ts stuff\n\tself.$scramjet = {\n\t\tversion: {\n\t\t\tbuild: COMMITHASH,\n\t\t\tversion: VERSION,\n\t\t},\n\t\tcodec: {},\n\t\tflagEnabled,\n\t};\n}\n\nexport const $scramjet = self.$scramjet;\n\nconst nativeFunction = Function;\nexport function loadCodecs() {\n\t$scramjet.codec.encode = nativeFunction(\n\t\t\"url\",\n\t\t$scramjet.config.codec.encode\n\t) as any;\n\t$scramjet.codec.decode = nativeFunction(\n\t\t\"url\",\n\t\t$scramjet.config.codec.decode\n\t) as any;\n}\n\nexport function flagEnabled(flag: keyof ScramjetFlags, url: URL): boolean {\n\tconst value = $scramjet.config.flags[flag];\n\tfor (const regex in $scramjet.config.siteFlags) {\n\t\tconst partialflags = $scramjet.config.siteFlags[regex];\n\t\tif (new RegExp(regex).test(url.href) && flag in partialflags) {\n\t\t\treturn partialflags[flag];\n\t\t}\n\t}\n\n\treturn value;\n}\n","import { $scramjet } from \"./scramjet\";\n\nexport const {\n\tutil: { BareClient, ScramjetHeaders, BareMuxConnection },\n\turl: { rewriteUrl, unrewriteUrl, rewriteBlob, unrewriteBlob },\n\trewrite: {\n\t\trewriteCss,\n\t\tunrewriteCss,\n\t\trewriteHtml,\n\t\tunrewriteHtml,\n\t\trewriteSrcset,\n\t\trewriteJs,\n\t\trewriteHeaders,\n\t\trewriteWorkers,\n\t\thtmlRules,\n\t},\n\tCookieStore,\n} = $scramjet.shared;\n\nexport const config = $scramjet.config;\n","import { URLMeta } from \"./url\";\n\n// i am a cat. i like to be petted. i like to be fed. i like to be\nimport {\n\tinitSync,\n\trewrite_js,\n\trewrite_js_from_arraybuffer,\n\tRewriterOutput,\n} from \"../../../rewriter/wasm/out/wasm.js\";\nimport { $scramjet, flagEnabled } from \"../../scramjet\";\n\nif (self.WASM)\n\tself.REAL_WASM = Uint8Array.from(atob(self.WASM), (c) => c.charCodeAt(0));\n\n// only use in sw\nexport async function asyncInitRewriter() {\n\tconst buf = await fetch($scramjet.config.files.wasm).then((r) =>\n\t\tr.arrayBuffer()\n\t);\n\tself.REAL_WASM = new Uint8Array(buf);\n}\n\nError.stackTraceLimit = 50;\n\nconst decoder = new TextDecoder();\n\nfunction rewriteJsWasm(\n\tinput: string | Uint8Array,\n\tsource: string | null,\n\tmeta: URLMeta,\n\tmodule: boolean\n): { js: string | Uint8Array; map: Uint8Array | null; tag: string } {\n\tinitSync({\n\t\tmodule: new WebAssembly.Module(self.REAL_WASM),\n\t});\n\n\tlet out: RewriterOutput;\n\tconst before = performance.now();\n\ttry {\n\t\tif (typeof input === \"string\") {\n\t\t\tout = rewrite_js(\n\t\t\t\tinput,\n\t\t\t\tmeta.base.href,\n\t\t\t\tsource || \"(unknown)\",\n\t\t\t\tmodule,\n\t\t\t\t$scramjet\n\t\t\t);\n\t\t} else {\n\t\t\tout = rewrite_js_from_arraybuffer(\n\t\t\t\tinput,\n\t\t\t\tmeta.base.href,\n\t\t\t\tsource || \"(unknown)\",\n\t\t\t\tmodule,\n\t\t\t\t$scramjet\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\tconst err1 = err as Error;\n\t\tconsole.warn(\"failed rewriting js for\", source, err1.message, input);\n\n\t\treturn { js: input, tag: \"\", map: null };\n\t}\n\tconst after = performance.now();\n\tlet { js, map, scramtag, errors, duration } = out;\n\n\tif (flagEnabled(\"sourcemaps\", meta.base) && !globalThis.clients) {\n\t\tglobalThis[globalThis.$scramjet.config.globals.pushsourcemapfn](\n\t\t\tArray.from(map),\n\t\t\tscramtag\n\t\t);\n\n\t\tmap = null;\n\t}\n\n\tif (flagEnabled(\"rewriterLogs\", meta.base)) {\n\t\tfor (const error of errors) {\n\t\t\tconsole.error(\"oxc parse error\", error);\n\t\t}\n\t}\n\n\tif (flagEnabled(\"rewriterLogs\", meta.base)) {\n\t\tlet timespan: string;\n\t\tif (duration < 1n) {\n\t\t\ttimespan = \"BLAZINGLY FAST\";\n\t\t} else if (duration < 500n) {\n\t\t\ttimespan = \"decent speed\";\n\t\t} else {\n\t\t\ttimespan = \"really slow\";\n\t\t}\n\t\tconst overhead = (after - before - Number(duration)).toFixed(2);\n\t\tconsole.log(\n\t\t\t`oxc rewrite for \"${source || \"(unknown)\"}\" was ${timespan} (${duration}ms; ${overhead}ms overhead)`\n\t\t);\n\t}\n\n\treturn {\n\t\tjs: typeof input === \"string\" ? decoder.decode(js) : js,\n\t\ttag: scramtag,\n\t\tmap,\n\t};\n}\n\n// 1. does not work with modules\n// 2. cannot proxy import()\n// 3. disables \"use strict\" optimizations\n// 4. i think the global state can get clobbered somehow\n//\n// if you can ensure all the preconditions are met this is faster than full rewrites\nfunction rewriteJsNaiive(js: string | ArrayBuffer) {\n\tif (typeof js !== \"string\") {\n\t\tjs = new TextDecoder().decode(js);\n\t}\n\n\treturn `\n\t\twith (${$scramjet.config.globals.wrapfn}(globalThis)) {\n\n\t\t\t${js}\n\n\t\t}\n\t`;\n}\n\nfunction rewriteJsInner(\n\tjs: string | Uint8Array,\n\turl: string | null,\n\tmeta: URLMeta,\n\tmodule = false\n) {\n\tif (flagEnabled(\"naiiveRewriter\", meta.origin)) {\n\t\tconst text = typeof js === \"string\" ? js : new TextDecoder().decode(js);\n\n\t\treturn { js: rewriteJsNaiive(text), tag: \"\", map: null };\n\t}\n\n\treturn rewriteJsWasm(js, url, meta, module);\n}\n\nexport function rewriteJs(\n\tjs: string | Uint8Array,\n\turl: string | null,\n\tmeta: URLMeta,\n\tmodule = false\n) {\n\treturn rewriteJsInner(js, url, meta, module).js;\n}\n\nexport function rewriteJsWithMap(\n\tjs: string | Uint8Array,\n\turl: string | null,\n\tmeta: URLMeta,\n\tmodule = false\n) {\n\treturn rewriteJsInner(js, url, meta, module);\n}\n","import { $scramjet } from \"../scramjet\";\n\nexport function errorTemplate(trace: string, fetchedURL: string) {\n\t// turn script into a data URI so we don\"t have to escape any HTML values\n\tconst script = `\n                errorTrace.value = ${JSON.stringify(trace)};\n                fetchedURL.textContent = ${JSON.stringify(fetchedURL)};\n                for (const node of document.querySelectorAll(\"#hostname\")) node.textContent = ${JSON.stringify(location.hostname)};\n                reload.addEventListener(\"click\", () => location.reload());\n                version.textContent = ${JSON.stringify($scramjet.version.version)};\n                build.textContent = ${JSON.stringify($scramjet.version.build)};\n                \n                document.getElementById('copy-button').addEventListener('click', async () => {\n                    const text = document.getElementById('errorTrace').value;\n                    await navigator.clipboard.writeText(text);\n                    const btn = document.getElementById('copy-button');\n                    btn.textContent = 'Copied!';\n                    setTimeout(() => btn.textContent = 'Copy', 2000);\n                });\n        `;\n\n\treturn `<!DOCTYPE html>\n            <html>\n                <head>\n                    <meta charset=\"utf-8\" />\n                    <title>Scramjet</title>\n                    <style>\n                    :root {\n                        --deep: #080602;\n                        --shallow: #181412;\n                        --beach: #f1e8e1;\n                        --shore: #b1a8a1;\n                        --accent: #ffa938;\n                        --font-sans: -apple-system, system-ui, BlinkMacSystemFont, sans-serif;\n                        --font-monospace: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n                    }\n\n                    *:not(div,p,span,ul,li,i,span) {\n                        background-color: var(--deep);\n                        color: var(--beach);\n                        font-family: var(--font-sans);\n                    }\n\n                    textarea,\n                    button {\n                        background-color: var(--shallow);\n                        border-radius: 0.6em;\n                        padding: 0.6em;\n                        border: none;\n                        appearance: none;\n                        font-family: var(--font-sans);\n                        color: var(--beach);\n                    }\n\n                    button.primary {\n                        background-color: var(--accent);\n                        color: var(--deep);\n                        font-weight: bold;\n                    }\n\n                    textarea {\n                        resize: none;\n                        height: 20em;\n                        text-align: left;\n                        font-family: var(--font-monospace);\n                    }\n\n                    body {\n                        width: 100vw;\n                        height: 100vh;\n                        justify-content: center;\n                        align-items: center;\n                    }\n\n                    body,\n                    html,\n                    #inner {\n                        display: flex;\n                        align-items: center;\n                        flex-direction: column;\n                        gap: 0.5em;\n                        overflow: hidden;\n                    }\n\n                    #inner {\n                        z-index: 100;\n                    }\n\n                    #cover {\n                        position: absolute;\n                        width: 100%;\n                        height: 100%;\n                        background-color: color-mix(in srgb, var(--deep) 70%, transparent);\n                        z-index: 99;\n                    }\n\n                    #info {\n                        display: flex;\n                        flex-direction: row;\n                        align-items: flex-start;\n                        gap: 1em;\n                    }\n\n                    #version-wrapper {\n                        width: auto;\n                        text-align: right;\n                        position: absolute;\n                        top: 0.5rem;\n                        right: 0.5rem;\n                        font-size: 0.8rem;\n                        color: var(--shore)!important;\n                        i {\n                            background-color: color-mix(in srgb, var(--deep), transparent 50%);\n                            border-radius: 9999px;\n                            padding: 0.2em 0.5em;\n                        }\n                        z-index: 101;\n                    }\n\n                    #errorTrace-wrapper {\n                        position: relative;\n                        width: fit-content;\n                    }\n\n                    #copy-button {\n                        position: absolute;\n                        top: 0.5em;\n                        right: 0.5em;\n                        padding: 0.23em;\n                        cursor: pointer;\n                        opacity: 0;\n                        transition: opacity 0.4s;\n                        font-size: 0.9em;\n                    }\n\n                    #errorTrace-wrapper:hover #copy-button {\n                        opacity: 1;\n                    }\n                    </style>\n                </head>\n                <body>\n                    <div id=\"cover\"></div>\n                    <div id=\"inner\">\n                        <h1 id=\"errorTitle\">Uh oh!</h1>\n                        <p>There was an error loading <b id=\"fetchedURL\"></b></p>\n                        <!-- <p id=\"errorMessage\">Internal Server Error</p> -->\n\n                        <div id=\"info\">\n                            <div id=\"errorTrace-wrapper\">\n                                <textarea id=\"errorTrace\" cols=\"40\" rows=\"10\" readonly></textarea>\n                                <button id=\"copy-button\" class=\"primary\">Copy</button>\n                            </div>\n                            <div id=\"troubleshooting\">\n                                <p>Try:</p>\n                                <ul>\n                                    <li>Checking your internet connection</li>\n                                    <li>Verifying you entered the correct address</li>\n                                    <li>Clearing the site data</li>\n                                    <li>Contacting <b id=\"hostname\"></b>'s administrator</li>\n                                    <li>Verify the server isn't censored</li>\n                                </ul>\n                                <p>If you're the administrator of <b id=\"hostname\"></b>, try:</p>\n                                    <ul>\n                                    <li>Restarting your server</li>\n                                    <li>Updating Scramjet</li>\n                                    <li>Troubleshooting the error on the <a href=\"https://github.com/MercuryWorkshop/scramjet\" target=\"_blank\">GitHub repository</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <br>\n                        <button id=\"reload\" class=\"primary\">Reload</button>\n                    </div>\n                    <p id=\"version-wrapper\"><i>Scramjet v<span id=\"version\"></span> (build <span id=\"build\"></span>)</i></p>\n                    <script src=\"${\"data:application/javascript,\" + encodeURIComponent(script)}\"></script>\n                </body>\n            </html>\n        `;\n}\n\nexport function renderError(err: unknown, fetchedURL: string) {\n\tconst headers = {\n\t\t\"content-type\": \"text/html\",\n\t};\n\tif (crossOriginIsolated) {\n\t\theaders[\"Cross-Origin-Embedder-Policy\"] = \"require-corp\";\n\t}\n\n\treturn new Response(errorTemplate(String(err), fetchedURL), {\n\t\tstatus: 500,\n\t\theaders: headers,\n\t});\n}\n","import { type MessageW2R, type MessageR2W } from \"../client/swruntime\";\n\nexport class FakeServiceWorker {\n\tsyncToken = 0;\n\tpromises: Record<number, (val?: MessageR2W) => void> = {};\n\tmessageChannel = new MessageChannel();\n\tconnected = false;\n\n\tconstructor(\n\t\tpublic handle: MessagePort,\n\t\tpublic origin: string\n\t) {\n\t\tthis.messageChannel.port1.addEventListener(\"message\", (event) => {\n\t\t\tif (\"scramjet$type\" in event.data) {\n\t\t\t\tif (event.data.scramjet$type === \"init\") {\n\t\t\t\t\tthis.connected = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleMessage(event.data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.messageChannel.port1.start();\n\n\t\tthis.handle.postMessage(\n\t\t\t{\n\t\t\t\tscramjet$type: \"init\",\n\t\t\t\tscramjet$port: this.messageChannel.port2,\n\t\t\t},\n\t\t\t[this.messageChannel.port2]\n\t\t);\n\t}\n\n\thandleMessage(data: MessageR2W) {\n\t\tconst cb = this.promises[data.scramjet$token];\n\t\tif (cb) {\n\t\t\tcb(data);\n\t\t\tdelete this.promises[data.scramjet$token];\n\t\t}\n\t}\n\n\tasync fetch(request: Request): Promise<Response | false> {\n\t\tconst token = this.syncToken++;\n\n\t\tconst message: MessageW2R = {\n\t\t\tscramjet$type: \"fetch\",\n\t\t\tscramjet$token: token,\n\t\t\tscramjet$request: {\n\t\t\t\turl: request.url,\n\t\t\t\tbody: request.body,\n\t\t\t\theaders: Array.from(request.headers.entries()),\n\t\t\t\tmethod: request.method,\n\t\t\t\tmode: request.mode,\n\t\t\t\tdestinitation: request.destination,\n\t\t\t},\n\t\t};\n\n\t\tconst transfer = request.body ? [request.body] : [];\n\n\t\tthis.handle.postMessage(message, transfer);\n\n\t\tconst { scramjet$response: r } = (await new Promise((resolve) => {\n\t\t\tthis.promises[token] = resolve;\n\t\t})) as MessageR2W;\n\n\t\tif (!r) return false;\n\n\t\treturn new Response(r.body, {\n\t\t\theaders: r.headers,\n\t\t\tstatus: r.status,\n\t\t\tstatusText: r.statusText,\n\t\t});\n\t}\n}\n","import { BareResponseFetch } from \"@mercuryworkshop/bare-mux\";\nimport { ScramjetServiceWorker } from \".\";\nimport { renderError } from \"./error\";\nimport { FakeServiceWorker } from \"./fakesw\";\nimport { CookieStore } from \"../shared/cookie\";\nimport {\n\tScramjetHeaders,\n\tunrewriteUrl,\n\trewriteCss,\n\trewriteHeaders,\n\trewriteHtml,\n\trewriteWorkers,\n\tunrewriteBlob,\n} from \"../shared\";\n\nimport type { URLMeta } from \"../shared/rewriters/url\";\nimport { $scramjet, flagEnabled } from \"../scramjet\";\nimport { rewriteJsWithMap } from \"../shared/rewriters/js\";\n\nfunction newmeta(url: URL): URLMeta {\n\treturn {\n\t\torigin: url,\n\t\tbase: url,\n\t};\n}\n\nexport async function handleFetch(\n\tthis: ScramjetServiceWorker,\n\trequest: Request,\n\tclient: Client | null\n) {\n\ttry {\n\t\tconst requesturl = new URL(request.url);\n\t\tlet workertype = \"\";\n\t\tif (requesturl.searchParams.has(\"type\")) {\n\t\t\tworkertype = requesturl.searchParams.get(\"type\") as string;\n\t\t\trequesturl.searchParams.delete(\"type\");\n\t\t}\n\t\tif (requesturl.searchParams.has(\"dest\")) {\n\t\t\trequesturl.searchParams.delete(\"dest\");\n\t\t}\n\n\t\tif (requesturl.pathname === this.config.files.wasm) {\n\t\t\treturn fetch(this.config.files.wasm).then(async (x) => {\n\t\t\t\tconst buf = await x.arrayBuffer();\n\t\t\t\tconst b64 = btoa(\n\t\t\t\t\tnew Uint8Array(buf)\n\t\t\t\t\t\t.reduce(\n\t\t\t\t\t\t\t(data, byte) => (data.push(String.fromCharCode(byte)), data),\n\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join(\"\")\n\t\t\t\t);\n\n\t\t\t\tlet payload = \"\";\n\t\t\t\tpayload +=\n\t\t\t\t\t\"if ('document' in self && document.currentScript) { document.currentScript.remove(); }\\n\";\n\t\t\t\tpayload += `self.WASM = '${b64}';`;\n\n\t\t\t\treturn new Response(payload, {\n\t\t\t\t\theaders: { \"content-type\": \"text/javascript\" },\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\trequesturl.pathname.startsWith(this.config.prefix + \"blob:\") ||\n\t\t\trequesturl.pathname.startsWith(this.config.prefix + \"data:\")\n\t\t) {\n\t\t\tlet dataurl = requesturl.pathname.substring(this.config.prefix.length);\n\t\t\tif (dataurl.startsWith(\"blob:\")) {\n\t\t\t\tdataurl = unrewriteBlob(dataurl);\n\t\t\t}\n\n\t\t\tconst response: Partial<BareResponseFetch> = await fetch(dataurl, {});\n\t\t\tconst url = dataurl.startsWith(\"blob:\") ? dataurl : \"(data url)\";\n\t\t\tresponse.finalURL = url;\n\t\t\tlet body: BodyType;\n\n\t\t\tif (response.body) {\n\t\t\t\tbody = await rewriteBody(\n\t\t\t\t\tresponse as BareResponseFetch,\n\t\t\t\t\tclient\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tbase: new URL(new URL(client.url).origin),\n\t\t\t\t\t\t\t\torigin: new URL(new URL(client.url).origin),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: newmeta(new URL(unrewriteUrl(request.referrer))),\n\t\t\t\t\trequest.destination,\n\t\t\t\t\tworkertype,\n\t\t\t\t\tthis.cookieStore\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst headers = Object.fromEntries(response.headers.entries());\n\n\t\t\tif (crossOriginIsolated) {\n\t\t\t\theaders[\"Cross-Origin-Opener-Policy\"] = \"same-origin\";\n\t\t\t\theaders[\"Cross-Origin-Embedder-Policy\"] = \"require-corp\";\n\t\t\t}\n\n\t\t\treturn new Response(body, {\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: headers,\n\t\t\t});\n\t\t}\n\n\t\tconst url = new URL(unrewriteUrl(requesturl));\n\n\t\tconst activeWorker: FakeServiceWorker | null = this.serviceWorkers.find(\n\t\t\t(w) => w.origin === url.origin\n\t\t);\n\n\t\tif (\n\t\t\tactiveWorker &&\n\t\t\tactiveWorker.connected &&\n\t\t\trequesturl.searchParams.get(\"from\") !== \"swruntime\"\n\t\t) {\n\t\t\t// TODO: check scope\n\t\t\tconst r = await activeWorker.fetch(request);\n\t\t\tif (r) return r;\n\t\t}\n\t\tif (url.origin == new URL(request.url).origin) {\n\t\t\tthrow new Error(\n\t\t\t\t\"attempted to fetch from same origin - this means the site has obtained a reference to the real origin, aborting\"\n\t\t\t);\n\t\t}\n\n\t\tconst headers = new ScramjetHeaders();\n\t\tfor (const [key, value] of request.headers.entries()) {\n\t\t\theaders.set(key, value);\n\t\t}\n\n\t\tif (\n\t\t\tclient &&\n\t\t\tnew URL(client.url).pathname.startsWith($scramjet.config.prefix)\n\t\t) {\n\t\t\t// TODO: i was against cors emulation but we might actually break stuff if we send full origin/referrer always\n\t\t\tconst clientURL = new URL(unrewriteUrl(client.url));\n\t\t\tif (clientURL.toString().includes(\"youtube.com\")) {\n\t\t\t\t// console.log(headers);\n\t\t\t} else {\n\t\t\t\theaders.set(\"Referer\", clientURL.toString());\n\t\t\t\theaders.set(\n\t\t\t\t\t\"Origin\",\n\t\t\t\t\tclientURL.origin ? `${clientURL.protocol}//${clientURL.host}` : \"null\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst cookies = this.cookieStore.getCookies(url, false);\n\n\t\tif (cookies.length) {\n\t\t\theaders.set(\"Cookie\", cookies);\n\t\t}\n\n\t\theaders.set(\"Sec-Fetch-Dest\", request.destination);\n\t\t//TODO: Emulate this later (like really)\n\t\theaders.set(\"Sec-Fetch-Site\", \"same-origin\");\n\t\theaders.set(\n\t\t\t\"Sec-Fetch-Mode\",\n\t\t\trequest.mode === \"cors\" ? request.mode : \"same-origin\"\n\t\t);\n\n\t\tconst ev = new ScramjetRequestEvent(\n\t\t\turl,\n\t\t\theaders.headers,\n\t\t\trequest.body,\n\t\t\trequest.method,\n\t\t\trequest.destination,\n\t\t\tclient\n\t\t);\n\t\tthis.dispatchEvent(ev);\n\n\t\tconst response: BareResponseFetch =\n\t\t\tev.response ||\n\t\t\t(await this.client.fetch(ev.url, {\n\t\t\t\tmethod: ev.method,\n\t\t\t\tbody: ev.body,\n\t\t\t\theaders: ev.requestHeaders,\n\t\t\t\tcredentials: \"omit\",\n\t\t\t\tmode: request.mode === \"cors\" ? request.mode : \"same-origin\",\n\t\t\t\tcache: request.cache,\n\t\t\t\tredirect: \"manual\",\n\t\t\t\t//@ts-ignore why the fuck is this not typed mircosoft\n\t\t\t\tduplex: \"half\",\n\t\t\t}));\n\n\t\treturn await handleResponse(\n\t\t\turl,\n\t\t\tworkertype,\n\t\t\trequest.destination,\n\t\t\tresponse,\n\t\t\tthis.cookieStore,\n\t\t\tclient,\n\t\t\tthis\n\t\t);\n\t} catch (err) {\n\t\tconst errorDetails = {\n\t\t\tmessage: err.message,\n\t\t\turl: request.url,\n\t\t\tdestination: request.destination,\n\t\t\ttimestamp: new Date().toISOString(),\n\t\t};\n\t\tif (err.stack) {\n\t\t\terrorDetails[\"stack\"] = err.stack;\n\t\t}\n\n\t\tconsole.error(\"ERROR FROM SERVICE WORKER FETCH: \", errorDetails);\n\n\t\tif (![\"document\", \"iframe\"].includes(request.destination))\n\t\t\treturn new Response(undefined, { status: 500 });\n\n\t\tconst formattedError = Object.entries(errorDetails)\n\t\t\t.map(\n\t\t\t\t([key, value]) =>\n\t\t\t\t\t`${key.charAt(0).toUpperCase() + key.slice(1)}: ${value}`\n\t\t\t)\n\t\t\t.join(\"\\n\\n\");\n\n\t\treturn renderError(formattedError, unrewriteUrl(request.url));\n\t}\n}\n\nasync function handleResponse(\n\turl: URL,\n\tworkertype: string,\n\tdestination: RequestDestination,\n\tresponse: BareResponseFetch,\n\tcookieStore: CookieStore,\n\tclient: Client,\n\tswtarget: ScramjetServiceWorker\n): Promise<Response> {\n\tlet responseBody: BodyType;\n\tconst responseHeaders = rewriteHeaders(response.rawHeaders, newmeta(url));\n\n\tconst maybeHeaders = responseHeaders[\"set-cookie\"] || [];\n\tfor (const cookie in maybeHeaders) {\n\t\tif (client) {\n\t\t\tconst promise = swtarget.dispatch(client, {\n\t\t\t\tscramjet$type: \"cookie\",\n\t\t\t\tcookie,\n\t\t\t\turl: url.href,\n\t\t\t});\n\t\t\tif (destination !== \"document\" && destination !== \"iframe\") {\n\t\t\t\tawait promise;\n\t\t\t}\n\t\t}\n\t}\n\n\tawait cookieStore.setCookies(\n\t\tmaybeHeaders instanceof Array ? maybeHeaders : [maybeHeaders],\n\t\turl\n\t);\n\n\tfor (const header in responseHeaders) {\n\t\t// flatten everything past here\n\t\tif (Array.isArray(responseHeaders[header]))\n\t\t\tresponseHeaders[header] = responseHeaders[header][0];\n\t}\n\n\tif (response.body) {\n\t\tresponseBody = await rewriteBody(\n\t\t\tresponse,\n\t\t\tnewmeta(url),\n\t\t\tdestination,\n\t\t\tworkertype,\n\t\t\tcookieStore\n\t\t);\n\t}\n\n\t// downloads\n\tif ([\"document\", \"iframe\"].includes(destination)) {\n\t\tconst header = responseHeaders[\"content-disposition\"];\n\n\t\t// validate header and test for filename\n\t\tif (!/\\s*?((inline|attachment);\\s*?)filename=/i.test(header)) {\n\t\t\t// if filename= wasn\"t specified then maybe the remote specified to download this as an attachment?\n\t\t\t// if it\"s invalid then we can still possibly test for the attachment/inline type\n\t\t\tconst type = /^\\s*?attachment/i.test(header) ? \"attachment\" : \"inline\";\n\n\t\t\t// set the filename\n\t\t\tconst [filename] = new URL(response.finalURL).pathname\n\t\t\t\t.split(\"/\")\n\t\t\t\t.slice(-1);\n\n\t\t\tresponseHeaders[\"content-disposition\"] =\n\t\t\t\t`${type}; filename=${JSON.stringify(filename)}`;\n\t\t}\n\t}\n\tif (responseHeaders[\"accept\"] === \"text/event-stream\") {\n\t\tresponseHeaders[\"content-type\"] = \"text/event-stream\";\n\t}\n\n\t// scramjet runtime can use features that permissions-policy blocks\n\tdelete responseHeaders[\"permissions-policy\"];\n\n\tif (\n\t\tcrossOriginIsolated &&\n\t\t[\n\t\t\t\"document\",\n\t\t\t\"iframe\",\n\t\t\t\"worker\",\n\t\t\t\"sharedworker\",\n\t\t\t\"style\",\n\t\t\t\"script\",\n\t\t].includes(destination)\n\t) {\n\t\tresponseHeaders[\"Cross-Origin-Embedder-Policy\"] = \"require-corp\";\n\t\tresponseHeaders[\"Cross-Origin-Opener-Policy\"] = \"same-origin\";\n\t}\n\n\tconst ev = new ScramjetHandleResponseEvent(\n\t\tresponseBody,\n\t\tresponseHeaders,\n\t\tresponse.status,\n\t\tresponse.statusText,\n\t\tdestination,\n\t\turl,\n\t\tresponse,\n\t\tclient\n\t);\n\tswtarget.dispatchEvent(ev);\n\n\treturn new Response(ev.responseBody, {\n\t\theaders: ev.responseHeaders as HeadersInit,\n\t\tstatus: ev.status,\n\t\tstatusText: ev.statusText,\n\t});\n}\n\nasync function rewriteBody(\n\tresponse: BareResponseFetch,\n\tmeta: URLMeta,\n\tdestination: RequestDestination,\n\tworkertype: string,\n\tcookieStore: CookieStore\n): Promise<BodyType> {\n\tswitch (destination) {\n\t\tcase \"iframe\":\n\t\tcase \"document\":\n\t\t\tif (response.headers.get(\"content-type\")?.startsWith(\"text/html\")) {\n\t\t\t\t// note from percs: i think this has the potential to be slow asf, but for right now its fine (we should probably look for a better solution)\n\t\t\t\t// another note from percs: regex seems to be broken, gonna comment this out\n\t\t\t\t/*\n\t\t\t\tconst buf = await response.arrayBuffer();\n\t\t\t\tconst decode = new TextDecoder(\"utf-8\").decode(buf);\n\t\t\t\tconst charsetHeader = response.headers.get(\"content-type\");\n\t\t\t\tconst charset =\n\t\t\t\t\tcharsetHeader?.split(\"charset=\")[1] ||\n\t\t\t\t\tdecode.match(/charset=([^\"]+)/)?.[1] ||\n\t\t\t\t\t\"utf-8\";\n\t\t\t\tconst htmlContent = charset\n\t\t\t\t\t? new TextDecoder(charset).decode(buf)\n\t\t\t\t\t: decode;\n\t\t\t\t*/\n\t\t\t\treturn rewriteHtml(await response.text(), cookieStore, meta, true);\n\t\t\t} else {\n\t\t\t\treturn response.body;\n\t\t\t}\n\t\tcase \"script\": {\n\t\t\tlet { js, tag, map } = rewriteJsWithMap(\n\t\t\t\tnew Uint8Array(await response.arrayBuffer()),\n\t\t\t\tresponse.finalURL,\n\t\t\t\tmeta,\n\t\t\t\tworkertype === \"module\"\n\t\t\t);\n\t\t\tif (flagEnabled(\"sourcemaps\", meta.base) && map) {\n\t\t\t\tif (js instanceof Uint8Array) {\n\t\t\t\t\tjs = new TextDecoder().decode(js);\n\t\t\t\t}\n\t\t\t\tconst sourcemapfn = `${globalThis.$scramjet.config.globals.pushsourcemapfn}([${map.join(\",\")}], \"${tag}\");`;\n\t\t\t\tconst strictMode = /^\\s*(['\"])use strict\\1;?/;\n\t\t\t\tif (strictMode.test(js)) {\n\t\t\t\t\tjs = js.replace(strictMode, `$&\\n${sourcemapfn}`);\n\t\t\t\t} else {\n\t\t\t\t\tjs = `${sourcemapfn}\\n${js}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn js as unknown as ArrayBuffer;\n\t\t}\n\t\tcase \"style\":\n\t\t\treturn rewriteCss(await response.text(), meta);\n\t\tcase \"sharedworker\":\n\t\tcase \"worker\":\n\t\t\treturn rewriteWorkers(\n\t\t\t\tnew Uint8Array(await response.arrayBuffer()),\n\t\t\t\tworkertype,\n\t\t\t\tresponse.finalURL,\n\t\t\t\tmeta\n\t\t\t);\n\t\tdefault:\n\t\t\treturn response.body;\n\t}\n}\n\ntype BodyType = string | ArrayBuffer | Blob | ReadableStream<any>;\n\nexport class ScramjetHandleResponseEvent extends Event {\n\tconstructor(\n\t\tpublic responseBody: BodyType,\n\t\tpublic responseHeaders: Record<string, string>,\n\t\tpublic status: number,\n\t\tpublic statusText: string,\n\t\tpublic destination: string,\n\t\tpublic url: URL,\n\t\tpublic rawResponse: BareResponseFetch,\n\t\tpublic client: Client\n\t) {\n\t\tsuper(\"handleResponse\");\n\t}\n}\n\nexport class ScramjetRequestEvent extends Event {\n\tconstructor(\n\t\tpublic url: URL,\n\t\tpublic requestHeaders: Record<string, string>,\n\t\tpublic body: BodyType,\n\t\tpublic method: string,\n\t\tpublic destination: string,\n\t\tpublic client: Client\n\t) {\n\t\tsuper(\"request\");\n\t}\n\tpublic response?: BareResponseFetch;\n}\n","\n// slightly modified https://github.com/ungap/random-uuid/blob/main/index.js\nexport function scramtag() {\n    return (\"\"+1e10).replace(/[018]/g,\n      c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n","import { scramtag } from './snippets/wasm-4b0f351a8e6eeb46/inline0.js';\n\nlet wasm;\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.buffer !== wasm.memory.buffer) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().slice(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer !== wasm.memory.buffer) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_2.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n/**\n * @param {string} js\n * @param {string} url\n * @param {string} script_url\n * @param {boolean} module\n * @param {object} scramjet\n * @returns {RewriterOutput}\n */\nexport function rewrite_js(js, url, script_url, module, scramjet) {\n    const ptr0 = passStringToWasm0(js, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(script_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.rewrite_js(ptr0, len0, ptr1, len1, ptr2, len2, module, scramjet);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n * @param {Uint8Array} js\n * @param {string} url\n * @param {string} script_url\n * @param {boolean} module\n * @param {object} scramjet\n * @returns {RewriterOutput}\n */\nexport function rewrite_js_from_arraybuffer(js, url, script_url, module, scramjet) {\n    const ptr0 = passArray8ToWasm0(js, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(script_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.rewrite_js_from_arraybuffer(ptr0, len0, ptr1, len1, ptr2, len2, module, scramjet);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {\n        const ret = arg0.buffer;\n        return ret;\n    };\n    imports.wbg.__wbg_call_672a4d21634d4a24 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_7cccdd69e0791ae2 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_833bed5770ea2041 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = arg0.call(arg1, arg2, arg3);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_get_67b2ba62fc30de12 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(arg0, arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_new_405e22f390576ce2 = function() {\n        const ret = new Object();\n        return ret;\n    };\n    imports.wbg.__wbg_new_9ffbe0a71eff35e3 = function() { return handleError(function (arg0, arg1) {\n        const ret = new URL(getStringFromWasm0(arg0, arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_new_a12002a7f91c75be = function(arg0) {\n        const ret = new Uint8Array(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_105ed471475aaf50 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbase_161c299e7a34e2eb = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = new URL(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(arg0, arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_now_d18023d54d4e5500 = function(arg0) {\n        const ret = arg0.now();\n        return ret;\n    };\n    imports.wbg.__wbg_scramtag_3a255d78b157986d = function(arg0) {\n        const ret = scramtag();\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_set_bb8cecf6a62b9f46 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(arg0, arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_static_accessor_GLOBAL_88a902d13a557d07 = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_37c5d418e4bf5819 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_5de37043a91a9c40 = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_toString_5285597960676b7b = function(arg0) {\n        const ret = arg0.toString();\n        return ret;\n    };\n    imports.wbg.__wbg_toString_c813bbd34d063839 = function(arg0) {\n        const ret = arg0.toString();\n        return ret;\n    };\n    imports.wbg.__wbindgen_array_new = function() {\n        const ret = [];\n        return ret;\n    };\n    imports.wbg.__wbindgen_array_push = function(arg0, arg1) {\n        arg0.push(arg1);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = arg0;\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n    imports.wbg.memory = memory || new WebAssembly.Memory({initial:19,maximum:16384,shared:true});\n}\n\nfunction __wbg_finalize_init(instance, module, thread_stack_size) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n    if (typeof thread_stack_size !== 'undefined' && (typeof thread_stack_size !== 'number' || thread_stack_size === 0 || thread_stack_size % 65536 !== 0)) { throw 'invalid stack size' }\n    wasm.__wbindgen_start(thread_stack_size);\n    return wasm;\n}\n\nfunction initSync(module, memory) {\n    if (wasm !== undefined) return wasm;\n\n    let thread_stack_size\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module, memory, thread_stack_size} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports, memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module, thread_stack_size);\n}\n\nasync function __wbg_init(module_or_path, memory) {\n    if (wasm !== undefined) return wasm;\n\n    let thread_stack_size\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path, memory, thread_stack_size} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('wasm_bg.wasm', \"\");\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports, memory);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module, thread_stack_size);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","import { FakeServiceWorker } from \"./fakesw\";\nimport { handleFetch } from \"./fetch\";\nimport type BareClient from \"@mercuryworkshop/bare-mux\";\nimport { ScramjetConfig } from \"../types\";\nimport { $scramjet, loadCodecs } from \"../scramjet\";\nimport { asyncInitRewriter } from \"../shared/rewriters/js\";\n\nexport class ScramjetServiceWorker extends EventTarget {\n\tclient: BareClient;\n\tconfig: ScramjetConfig;\n\n\tsyncPool: Record<number, (val?: any) => void> = {};\n\tsynctoken = 0;\n\n\tcookieStore = new $scramjet.shared.CookieStore();\n\n\tserviceWorkers: FakeServiceWorker[] = [];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.client = new $scramjet.shared.util.BareClient();\n\n\t\tconst db = indexedDB.open(\"$scramjet\", 1);\n\n\t\tdb.onsuccess = () => {\n\t\t\tconst res = db.result;\n\t\t\tconst tx = res.transaction(\"cookies\", \"readonly\");\n\t\t\tconst store = tx.objectStore(\"cookies\");\n\t\t\tconst cookies = store.get(\"cookies\");\n\n\t\t\tcookies.onsuccess = () => {\n\t\t\t\tif (cookies.result) {\n\t\t\t\t\tthis.cookieStore.load(cookies.result);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\taddEventListener(\"message\", async ({ data }: { data: MessageC2W }) => {\n\t\t\tif (!(\"scramjet$type\" in data)) return;\n\n\t\t\tif (\"scramjet$token\" in data) {\n\t\t\t\t// (ack message)\n\t\t\t\tconst cb = this.syncPool[data.scramjet$token];\n\t\t\t\tdelete this.syncPool[data.scramjet$token];\n\t\t\t\tcb(data);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (data.scramjet$type === \"registerServiceWorker\") {\n\t\t\t\tthis.serviceWorkers.push(new FakeServiceWorker(data.port, data.origin));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (data.scramjet$type === \"cookie\") {\n\t\t\t\tthis.cookieStore.setCookies([data.cookie], new URL(data.url));\n\t\t\t\tconst res = db.result;\n\t\t\t\tconst tx = res.transaction(\"cookies\", \"readwrite\");\n\t\t\t\tconst store = tx.objectStore(\"cookies\");\n\t\t\t\tstore.put(JSON.parse(this.cookieStore.dump()), \"cookies\");\n\t\t\t}\n\n\t\t\tif (data.scramjet$type === \"loadConfig\") {\n\t\t\t\tthis.config = data.config;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync dispatch(client: Client, data: MessageW2C): Promise<MessageC2W> {\n\t\tconst token = this.synctoken++;\n\t\tlet cb: (val: MessageC2W) => void;\n\t\tconst promise: Promise<MessageC2W> = new Promise((r) => (cb = r));\n\t\tthis.syncPool[token] = cb;\n\t\tdata.scramjet$token = token;\n\n\t\tclient.postMessage(data);\n\n\t\treturn await promise;\n\t}\n\n\tasync loadConfig() {\n\t\tif (this.config) return;\n\n\t\tconst request = indexedDB.open(\"$scramjet\", 1);\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\trequest.onsuccess = async () => {\n\t\t\t\tconst db = request.result;\n\t\t\t\tconst tx = db.transaction(\"config\", \"readonly\");\n\t\t\t\tconst store = tx.objectStore(\"config\");\n\t\t\t\tconst config = store.get(\"config\");\n\n\t\t\t\tconfig.onsuccess = async () => {\n\t\t\t\t\tthis.config = config.result;\n\t\t\t\t\t$scramjet.config = config.result;\n\n\t\t\t\t\tloadCodecs();\n\n\t\t\t\t\tawait asyncInitRewriter();\n\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t\tconfig.onerror = () => reject(config.error);\n\t\t\t};\n\n\t\t\trequest.onerror = () => reject(request.error);\n\t\t});\n\t}\n\n\troute({ request }: FetchEvent) {\n\t\tif (request.url.startsWith(location.origin + this.config.prefix))\n\t\t\treturn true;\n\t\telse if (request.url.startsWith(location.origin + this.config.files.wasm))\n\t\t\treturn true;\n\t\telse return false;\n\t}\n\n\tasync fetch({ request, clientId }: FetchEvent) {\n\t\tif (!this.config) await this.loadConfig();\n\n\t\tconst client = await self.clients.get(clientId);\n\n\t\treturn handleFetch.call(this, request, client);\n\t}\n}\n\n// @ts-ignore\nself.ScramjetServiceWorker = ScramjetServiceWorker;\n\ntype RegisterServiceWorkerMessage = {\n\tscramjet$type: \"registerServiceWorker\";\n\tport: MessagePort;\n\torigin: string;\n};\n\ntype CookieMessage = {\n\tscramjet$type: \"cookie\";\n\tcookie: string;\n\turl: string;\n};\n\ntype ConfigMessage = {\n\tscramjet$type: \"loadConfig\";\n\tconfig: ScramjetConfig;\n};\n\ntype MessageCommon = {\n\tscramjet$type: string;\n\tscramjet$token?: number;\n};\n\ntype MessageTypeC2W =\n\t| RegisterServiceWorkerMessage\n\t| CookieMessage\n\t| ConfigMessage;\ntype MessageTypeW2C = CookieMessage;\n\n// c2w: client to (service) worker\nexport type MessageC2W = MessageCommon & MessageTypeC2W;\nexport type MessageW2C = MessageCommon & MessageTypeW2C;\n"],"names":["self","COMMITHASH","VERSION","flagEnabled","$scramjet","nativeFunction","Function","loadCodecs","flag","url","value","regex","partialflags","RegExp","BareClient","ScramjetHeaders","BareMuxConnection","rewriteUrl","unrewriteUrl","rewriteBlob","unrewriteBlob","rewriteCss","unrewriteCss","rewriteHtml","unrewriteHtml","rewriteSrcset","rewriteJs","rewriteHeaders","rewriteWorkers","htmlRules","CookieStore","config","initSync","rewrite_js","rewrite_js_from_arraybuffer","Uint8Array","atob","c","asyncInitRewriter","buf","fetch","r","Error","decoder","TextDecoder","rewriteJsWasm","input","source","meta","module","WebAssembly","out","before","performance","err","err1","console","after","js","map","scramtag","errors","duration","globalThis","Array","error","timespan","overhead","Number","rewriteJsNaiive","rewriteJsInner","text","rewriteJsWithMap","errorTemplate","trace","fetchedURL","script","JSON","location","encodeURIComponent","renderError","headers","crossOriginIsolated","Response","String","FakeServiceWorker","handle","origin","MessageChannel","event","data","cb","request","token","message","transfer","Promise","resolve","newmeta","handleFetch","client","requesturl","URL","workertype","x","b64","btoa","byte","payload","dataurl","response","body","rewriteBody","Object","activeWorker","w","key","clientURL","cookies","ev","ScramjetRequestEvent","handleResponse","errorDetails","Date","undefined","formattedError","destination","cookieStore","swtarget","responseBody","responseHeaders","maybeHeaders","cookie","promise","header","type","filename","ScramjetHandleResponseEvent","tag","sourcemapfn","strictMode","Event","status","statusText","rawResponse","requestHeaders","method","ScramjetServiceWorker","EventTarget","db","indexedDB","res","tx","store","addEventListener","reject","clientId"],"mappings":"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CA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM;AACN;;AAEA;AACA,qBAAqB;;AAErB,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,KAAK;AACL,2DAA2D;AAC3D;AACA;AACA,KAAK;AACL,2DAA2D;AAC3D;AACA;AACA,KAAK;AACL,0DAA0D;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oFAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,qCAAqC;AAChG;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6JAA6J;AAC7J;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,mCAAmC;AACjD,UAAU;AACV,wEAAwE;AACxE;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD,UAAU;AACV,uFAAuF;AACvF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,YAAY,mBAAmB;;AAE/B;AACA;;AAEoB;AACpB,6DAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpZmB;AACP;AAGc;AACO;AAEpD,MAAM+C,8BAA8BC;IAC1C,OAAmB;IACnB,OAAuB;IAEvB,WAAgD,CAAC,EAAE;IACnD,YAAY,EAAE;IAEd,cAAc,IAAIhJ,mEAA4B,GAAG;IAEjD,iBAAsC,EAAE,CAAC;IAEzC,aAAc;QACb,KAAK;QACL,IAAI,CAAC,MAAM,GAAG,IAAIA,uEAAgC;QAElD,MAAMiJ,KAAKC,UAAU,IAAI,CAAC,aAAa;QAEvCD,GAAG,SAAS,GAAG;YACd,MAAME,MAAMF,GAAG,MAAM;YACrB,MAAMG,KA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"}