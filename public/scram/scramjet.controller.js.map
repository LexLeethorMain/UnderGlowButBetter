{"version":3,"file":"scramjet.controller.js","sources":["webpack://@mercuryworkshop/scramjet/./src/controller/frame.ts","webpack://@mercuryworkshop/scramjet/./src/log.ts","webpack://@mercuryworkshop/scramjet/./src/scramjet.ts","webpack://@mercuryworkshop/scramjet/./src/symbols.ts","webpack://@mercuryworkshop/scramjet/./src/controller/index.ts"],"sourcesContent":["import { ScramjetController } from \".\";\nimport type { ScramjetClient } from \"../client/client\";\nimport { SCRAMJETCLIENT, SCRAMJETFRAME } from \"../symbols\";\n\nexport class ScramjetFrame extends EventTarget {\n\tconstructor(\n\t\tprivate controller: ScramjetController,\n\t\tpublic frame: HTMLIFrameElement\n\t) {\n\t\tsuper();\n\t\tframe[SCRAMJETFRAME] = this;\n\t}\n\n\tget client(): ScramjetClient {\n\t\treturn this.frame.contentWindow.window[SCRAMJETCLIENT];\n\t}\n\n\tget url(): URL {\n\t\treturn this.client.url;\n\t}\n\n\tgo(url: string | URL) {\n\t\tif (url instanceof URL) url = url.toString();\n\n\t\tdbg.log(\"navigated to\", url);\n\n\t\tthis.frame.src = this.controller.encodeUrl(url);\n\t}\n\n\tback() {\n\t\tthis.frame.contentWindow?.history.back();\n\t}\n\n\tforward() {\n\t\tthis.frame.contentWindow?.history.forward();\n\t}\n\n\treload() {\n\t\tthis.frame.contentWindow?.location.reload();\n\t}\n}\n","export default {\n\tfmt: function (severity: string, message: string, ...args: any[]) {\n\t\tconst old = Error.prepareStackTrace;\n\n\t\tError.prepareStackTrace = (_, stack) => {\n\t\t\tstack.shift(); // stack();\n\t\t\tstack.shift(); // fmt();\n\t\t\tstack.shift();\n\n\t\t\tlet fmt = \"\";\n\t\t\tfor (let i = 1; i < Math.min(2, stack.length); i++) {\n\t\t\t\tif (stack[i].getFunctionName()) {\n\t\t\t\t\t// const f = stack[i].getThis()?.constructor?.name;\n\t\t\t\t\t// if (f) fmt += `${f}.`\n\t\t\t\t\tfmt += `${stack[i].getFunctionName()} -> ` + fmt;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfmt += stack[0].getFunctionName() || \"Anonymous\";\n\n\t\t\treturn fmt;\n\t\t};\n\n\t\tconst fmt = (function stack() {\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (e) {\n\t\t\t\treturn e.stack;\n\t\t\t}\n\t\t})();\n\n\t\tError.prepareStackTrace = old;\n\n\t\tconst fn = console[severity] || console.log;\n\t\tconst bg = {\n\t\t\tlog: \"#000\",\n\t\t\twarn: \"#f80\",\n\t\t\terror: \"#f00\",\n\t\t\tdebug: \"transparent\",\n\t\t}[severity];\n\t\tconst fg = {\n\t\t\tlog: \"#fff\",\n\t\t\twarn: \"#fff\",\n\t\t\terror: \"#fff\",\n\t\t\tdebug: \"gray\",\n\t\t}[severity];\n\t\tconst padding = {\n\t\t\tlog: 2,\n\t\t\twarn: 4,\n\t\t\terror: 4,\n\t\t\tdebug: 0,\n\t\t}[severity];\n\n\t\tfn(\n\t\t\t`%c${fmt}%c ${message}`,\n\t\t\t`\n\t\tbackground-color: ${bg};\n\t\tcolor: ${fg};\n\t\tpadding: ${padding}px;\n\t\tfont-weight: bold;\n\t\tfont-family: monospace;\n\t\tfont-size: 0.9em;\n\t`,\n\t\t\t`${severity === \"debug\" ? \"color: gray\" : \"\"}`,\n\t\t\t...args\n\t\t);\n\t},\n\tlog: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"log\", message, ...args);\n\t},\n\twarn: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"warn\", message, ...args);\n\t},\n\terror: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"error\", message, ...args);\n\t},\n\tdebug: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"debug\", message, ...args);\n\t},\n};\n","import { ScramjetFlags } from \"./types\";\n\nif (!(\"$scramjet\" in self)) {\n\t// @ts-expect-error ts stuff\n\tself.$scramjet = {\n\t\tversion: {\n\t\t\tbuild: COMMITHASH,\n\t\t\tversion: VERSION,\n\t\t},\n\t\tcodec: {},\n\t\tflagEnabled,\n\t};\n}\n\nexport const $scramjet = self.$scramjet;\n\nconst nativeFunction = Function;\nexport function loadCodecs() {\n\t$scramjet.codec.encode = nativeFunction(\n\t\t\"url\",\n\t\t$scramjet.config.codec.encode\n\t) as any;\n\t$scramjet.codec.decode = nativeFunction(\n\t\t\"url\",\n\t\t$scramjet.config.codec.decode\n\t) as any;\n}\n\nexport function flagEnabled(flag: keyof ScramjetFlags, url: URL): boolean {\n\tconst value = $scramjet.config.flags[flag];\n\tfor (const regex in $scramjet.config.siteFlags) {\n\t\tconst partialflags = $scramjet.config.siteFlags[regex];\n\t\tif (new RegExp(regex).test(url.href) && flag in partialflags) {\n\t\t\treturn partialflags[flag];\n\t\t}\n\t}\n\n\treturn value;\n}\n","// see types.d.ts for what these mean\nexport const SCRAMJETCLIENTNAME = \"scramjet client global\";\nexport const SCRAMJETCLIENT = Symbol.for(SCRAMJETCLIENTNAME);\nexport const SCRAMJETFRAME = Symbol.for(\"scramjet frame handle\");\n","import { ScramjetConfig } from \"../types\";\nimport { ScramjetFrame } from \"./frame\";\nimport { $scramjet, loadCodecs } from \"../scramjet\";\n\nexport class ScramjetController {\n\tprivate db: IDBDatabase;\n\n\tconstructor(config: Partial<ScramjetConfig>) {\n\t\t// sane ish defaults\n\t\tconst defaultConfig: ScramjetConfig = {\n\t\t\tprefix: \"/scramjet/\",\n\t\t\tglobals: {\n\t\t\t\twrapfn: \"$scramjet$wrap\",\n\t\t\t\twrapthisfn: \"$scramjet$wrapthis\",\n\t\t\t\ttrysetfn: \"$scramjet$tryset\",\n\t\t\t\timportfn: \"$scramjet$import\",\n\t\t\t\trewritefn: \"$scramjet$rewrite\",\n\t\t\t\tmetafn: \"$scramjet$meta\",\n\t\t\t\tsetrealmfn: \"$scramjet$setrealm\",\n\t\t\t\tpushsourcemapfn: \"$scramjet$pushsourcemap\",\n\t\t\t},\n\t\t\tfiles: {\n\t\t\t\twasm: \"/scramjet.wasm.js\",\n\t\t\t\tshared: \"/scramjet.shared.js\",\n\t\t\t\tworker: \"/scramjet.worker.js\",\n\t\t\t\tclient: \"/scramjet.client.js\",\n\t\t\t\tsync: \"/scramjet.sync.js\",\n\t\t\t},\n\t\t\tflags: {\n\t\t\t\tserviceworkers: false,\n\t\t\t\tsyncxhr: false,\n\t\t\t\tnaiiveRewriter: false,\n\t\t\t\tstrictRewrites: true,\n\t\t\t\trewriterLogs: false,\n\t\t\t\tcaptureErrors: true,\n\t\t\t\tcleanErrors: false,\n\t\t\t\tscramitize: false,\n\t\t\t\tsourcemaps: true,\n\t\t\t},\n\t\t\tsiteFlags: {},\n\t\t\tcodec: {\n\t\t\t\tencode: `if (!url) return url;\n\t\t\t\t\treturn encodeURIComponent(url);`,\n\t\t\t\tdecode: `if (!url) return url;\n\t\t\t\t\treturn decodeURIComponent(url);`,\n\t\t\t},\n\t\t};\n\n\t\tconst deepMerge = (target: any, source: any): any => {\n\t\t\tfor (const key in source) {\n\t\t\t\tif (source[key] instanceof Object && key in target) {\n\t\t\t\t\tObject.assign(source[key], deepMerge(target[key], source[key]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Object.assign(target || {}, source);\n\t\t};\n\n\t\t$scramjet.config = deepMerge(defaultConfig, config);\n\t}\n\n\tasync init(): Promise<void> {\n\t\tloadCodecs();\n\n\t\tawait this.openIDB();\n\t\tnavigator.serviceWorker.controller?.postMessage({\n\t\t\tscramjet$type: \"loadConfig\",\n\t\t\tconfig: $scramjet.config,\n\t\t});\n\t\tdbg.log(\"config loaded\");\n\t}\n\n\tcreateFrame(frame?: HTMLIFrameElement): ScramjetFrame {\n\t\tif (!frame) {\n\t\t\tframe = document.createElement(\"iframe\");\n\t\t}\n\n\t\treturn new ScramjetFrame(this, frame);\n\t}\n\n\tencodeUrl(url: string | URL): string {\n\t\tif (url instanceof URL) url = url.toString();\n\n\t\treturn $scramjet.config.prefix + $scramjet.codec.encode(url);\n\t}\n\n\tdecodeUrl(url: string | URL) {\n\t\tif (url instanceof URL) url = url.toString();\n\n\t\treturn $scramjet.codec.decode(url);\n\t}\n\n\tasync openIDB(): Promise<IDBDatabase> {\n\t\tconst db = indexedDB.open(\"$scramjet\", 1);\n\n\t\treturn new Promise<IDBDatabase>((resolve, reject) => {\n\t\t\tdb.onsuccess = async () => {\n\t\t\t\tthis.db = db.result;\n\t\t\t\tawait this.#saveConfig();\n\t\t\t\tresolve(db.result);\n\t\t\t};\n\t\t\tdb.onupgradeneeded = () => {\n\t\t\t\tconst res = db.result;\n\t\t\t\tif (!res.objectStoreNames.contains(\"config\")) {\n\t\t\t\t\tres.createObjectStore(\"config\");\n\t\t\t\t}\n\t\t\t\tif (!res.objectStoreNames.contains(\"cookies\")) {\n\t\t\t\t\tres.createObjectStore(\"cookies\");\n\t\t\t\t}\n\t\t\t};\n\t\t\tdb.onerror = () => reject(db.error);\n\t\t});\n\t}\n\n\tasync #saveConfig() {\n\t\tif (!this.db) {\n\t\t\tconsole.error(\"Store not ready!\");\n\n\t\t\treturn;\n\t\t}\n\t\tconst tx = this.db.transaction(\"config\", \"readwrite\");\n\t\tconst store = tx.objectStore(\"config\");\n\t\tconsole.log(store.getAll());\n\t\tconst req = store.put($scramjet.config, \"config\");\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.onsuccess = resolve;\n\t\t\treq.onerror = reject;\n\t\t});\n\t}\n\n\tasync modifyConfig(config: ScramjetConfig) {\n\t\t$scramjet.config = Object.assign({}, $scramjet.config, config);\n\t\tloadCodecs();\n\n\t\tawait this.#saveConfig();\n\t}\n}\n\nwindow.ScramjetController = ScramjetController;\n"],"names":["SCRAMJETCLIENT","SCRAMJETFRAME","ScramjetFrame","EventTarget","controller","frame","url","URL","dbg","severity","message","args","old","Error","_","stack","fmt","i","Math","e","fn","console","bg","fg","padding","self","COMMITHASH","VERSION","flagEnabled","$scramjet","nativeFunction","Function","loadCodecs","flag","value","regex","partialflags","RegExp","SCRAMJETCLIENTNAME","Symbol","ScramjetController","config","defaultConfig","deepMerge","target","source","key","Object","navigator","document","db","indexedDB","Promise","resolve","reject","res","tx","store","req","window"],"mappings":"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"}